@import "variables";

.mat-icon {
  color: $primary-500;
  width: 2.5rem;
  height: 2.5rem;
}

.active {
  background: none;
  color: $color-secondary;

  .mat-icon {
    color: $color-secondary;
    margin-right: 2.5rem;
  }
}

.sidebar__nav-list {

  &-link {
    background: none;
    padding: 0;
    color: white;

    .mat-icon {
      color: white;
      margin-right: 2.5rem;
    }
  }


  &-link:hover,
  &-link:active {
    background: none;
    color: $color-secondary;
    transition: all .2s;

    .mat-icon {
      color: $color-secondary;
      margin-right: 2.5rem;
    }
  }

  &-link:active {
    background: none;
    color: $color-secondary;
    transition: all .2s;
  }

}

//.mat-sidenav {
//  width: 240px;
//  background-color: $primary-500;
//}

.example-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  position: relative;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
  height: 100%;
  display: flex;
  flex-direction: column;

  .mat-sidenav-content {
    height: 100%;
    flex: 1;
    display: flex;
    flex-direction: column;

    .main-container {
      flex: 1;
      display: flex;
      flex-direction: column;
      height: 100%;
      .main {
        flex: 1;
      }
      .footer {

      }
    }
  }
}

mat-sidenav {
  width: 240px;
}

mat-sidenav-content {
  height: 100%;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
     `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
  height: 100%;
}







